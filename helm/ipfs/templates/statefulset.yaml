apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ipfs.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ipfs.labels" . | nindent 4 }}
    app.kubernetes.io/component: ipfs
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  serviceName: {{ include "ipfs.fullname" . }}-headless
  selector:
    matchLabels:
      {{- include "ipfs.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: ipfs
  template:
    metadata:
      labels:
        {{- include "ipfs.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ipfs
    spec:
      serviceAccountName: {{ include "ipfs.serviceAccountName" . }}
      containers:
        - name: ipfs
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - daemon
            - --migrate=true
          ports:
            - name: swarm
              containerPort: 4001
              protocol: TCP
            - name: api
              containerPort: 5001
              protocol: TCP
            - name: gateway
              containerPort: 8080
              protocol: TCP
          env:
            - name: IPFS_LOGGING
              value: {{ .Values.log.level }}
            {{- if .Values.service.swarm.ipAddress }}
            - name: IPFS_ADDRESS_ANNOUNCE
              value: /ip4/{{ .Values.service.swarm.ipAddress }}/tcp/{{ .Values.service.swarm.port }}
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: swarm
          readinessProbe:
            tcpSocket:
              port: swarm
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: ipfs-storage
              mountPath: /data/ipfs
            - name: start-ipfs
              mountPath: /usr/local/bin/start_ipfs
              subPath: start_ipfs
        - name: cluster
          image: "{{ .Values.cluster.image.repository }}:{{ .Values.cluster.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: cluster-api
              containerPort: 9094
              protocol: TCP
            - name: cluster-proxy
              containerPort: 9095
              protocol: TCP
            - name: cluster-swarm
              containerPort: 9096
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: cluster-swarm
          readinessProbe:
            tcpSocket:
              port: cluster-swarm
          volumeMounts:
            - name: cluster-storage
              mountPath: /data/ipfs-cluster
          resources:
            {{- toYaml .Values.cluster.resources | nindent 12 }}
      volumes:
        - name: start-ipfs
          configMap:
            name: {{ include "ipfs.fullname" . }}
            items:
              - key: start_ipfs
                path: start_ipfs
                mode: 0555
  volumeClaimTemplates:
    - metadata:
        name: ipfs-storage
      spec:
        accessModes:
          {{- .Values.persistence.accessModes | toYaml | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
    - metadata:
        name: cluster-storage
      spec:
        accessModes:
          {{- .Values.cluster.persistence.accessModes | toYaml | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.cluster.persistence.size | quote }}
        {{- if .Values.cluster.persistence.storageClass }}
        storageClassName: {{ .Values.cluster.persistence.storageClass }}
        {{- end }}
